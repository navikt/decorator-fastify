name: Deploy app to nais
on:
  workflow_call:
    inputs:
      DEPLOY_INSTANCE:
        required: true
        type: string
      CLUSTER:
        required: true
        type: string
      IMAGE:
        required: true
        type: string
      DEPLOY_INTERNAL:
        required: false
        type: boolean
    secrets:
      VARS_UPDATE_TOKEN:
        required: true

jobs:
  deploy_to_nais:
    name: Deploy to nais
    runs-on: ubuntu-latest
    environment: ${{ inputs.DEPLOY_INSTANCE }}
    env:
      versionId: ${{ github.sha }}
      prevVersionId: ${{ vars.PREV_VERSION_ID }}
      prevImage: ${{ vars.PREV_IMAGE }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Deploy internal versioned app
        uses: nais/deploy/actions/deploy@v2
        if: inputs.DEPLOY_INTERNAL == true && env.prevVersionId != '' && env.prevImage != ''
        env:
          CLUSTER: ${{ inputs.CLUSTER }}
          RESOURCE: .nais/config-internal.yml
          VAR: image=${{ env.prevImage }},versionId=${{ env.prevVersionId }}
          VARS: .nais/vars/${{ inputs.DEPLOY_INSTANCE }}.yml
      - name: Deploy external app
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ inputs.CLUSTER }}
          RESOURCE: .nais/config.yml
          VAR: image=${{ inputs.IMAGE }},versionId=${{ env.versionId }}
          VARS: .nais/vars/${{ inputs.DEPLOY_INSTANCE }}.yml
      - name: Update vars
        env:
          GITHUB_TOKEN: ${{ secrets.VARS_UPDATE_TOKEN }}
        run: |
          gh variable set PREV_VERSION_ID --env ${{ inputs.DEPLOY_INSTANCE }} --body "${{ env.versionId }}"
          gh variable set PREV_IMAGE --env ${{ inputs.DEPLOY_INSTANCE }} --body "${{ inputs.IMAGE }}"
          gh variable list --env ${{ inputs.DEPLOY_INSTANCE }}
